pub fn cv_cuda_fastNlMeansDenoisingColored_const_GpuMatR_GpuMatR_float_float(src: *const c_void, dst: *mut c_void, h_luminance: f32, photo_render: f32, ocvrs_return: *mut ResultVoid);
pub fn cv_cuda_fastNlMeansDenoisingColored_const_GpuMatR_GpuMatR_float_float_int_int_StreamR(src: *const c_void, dst: *mut c_void, h_luminance: f32, photo_render: f32, search_window: i32, block_size: i32, stream: *mut c_void, ocvrs_return: *mut ResultVoid);
pub fn cv_cuda_fastNlMeansDenoising_const_GpuMatR_GpuMatR_float(src: *const c_void, dst: *mut c_void, h: f32, ocvrs_return: *mut ResultVoid);
pub fn cv_cuda_fastNlMeansDenoising_const_GpuMatR_GpuMatR_float_int_int_StreamR(src: *const c_void, dst: *mut c_void, h: f32, search_window: i32, block_size: i32, stream: *mut c_void, ocvrs_return: *mut ResultVoid);
pub fn cv_cuda_nonLocalMeans_const_GpuMatR_GpuMatR_float(src: *const c_void, dst: *mut c_void, h: f32, ocvrs_return: *mut ResultVoid);
pub fn cv_cuda_nonLocalMeans_const_GpuMatR_GpuMatR_float_int_int_int_StreamR(src: *const c_void, dst: *mut c_void, h: f32, search_window: i32, block_size: i32, border_mode: i32, stream: *mut c_void, ocvrs_return: *mut ResultVoid);
pub fn cv_AlignExposures_process_const__InputArrayR_vectorLMatGR_const__InputArrayR_const__InputArrayR(instance: *mut c_void, src: *const c_void, dst: *mut c_void, times: *const c_void, response: *const c_void, ocvrs_return: *mut ResultVoid);
pub fn cv_AlignExposures_to_AlignMTB(instance: *mut c_void) -> *mut c_void;
pub fn cv_AlignExposures_to_Algorithm(instance: *mut c_void) -> *mut c_void;
pub fn cv_AlignExposures_delete(instance: *mut c_void);
pub fn cv_AlignMTB_process_const__InputArrayR_vectorLMatGR_const__InputArrayR_const__InputArrayR(instance: *mut c_void, src: *const c_void, dst: *mut c_void, times: *const c_void, response: *const c_void, ocvrs_return: *mut ResultVoid);
pub fn cv_AlignMTB_process_const__InputArrayR_vectorLMatGR(instance: *mut c_void, src: *const c_void, dst: *mut c_void, ocvrs_return: *mut ResultVoid);
pub fn cv_AlignMTB_calculateShift_const__InputArrayR_const__InputArrayR(instance: *mut c_void, img0: *const c_void, img1: *const c_void, ocvrs_return: *mut Result<core::Point>);
pub fn cv_AlignMTB_shiftMat_const__InputArrayR_const__OutputArrayR_const_Point(instance: *mut c_void, src: *const c_void, dst: *const c_void, shift: *const core::Point, ocvrs_return: *mut ResultVoid);
pub fn cv_AlignMTB_computeBitmaps_const__InputArrayR_const__OutputArrayR_const__OutputArrayR(instance: *mut c_void, img: *const c_void, tb: *const c_void, eb: *const c_void, ocvrs_return: *mut ResultVoid);
pub fn cv_AlignMTB_getMaxBits_const(instance: *const c_void, ocvrs_return: *mut Result<i32>);
pub fn cv_AlignMTB_setMaxBits_int(instance: *mut c_void, max_bits: i32, ocvrs_return: *mut ResultVoid);
pub fn cv_AlignMTB_getExcludeRange_const(instance: *const c_void, ocvrs_return: *mut Result<i32>);
pub fn cv_AlignMTB_setExcludeRange_int(instance: *mut c_void, exclude_range: i32, ocvrs_return: *mut ResultVoid);
pub fn cv_AlignMTB_getCut_const(instance: *const c_void, ocvrs_return: *mut Result<bool>);
pub fn cv_AlignMTB_setCut_bool(instance: *mut c_void, value: bool, ocvrs_return: *mut ResultVoid);
pub fn cv_AlignMTB_to_Algorithm(instance: *mut c_void) -> *mut c_void;
pub fn cv_AlignMTB_to_AlignExposures(instance: *mut c_void) -> *mut c_void;
pub fn cv_AlignMTB_delete(instance: *mut c_void);
pub fn cv_CalibrateCRF_process_const__InputArrayR_const__OutputArrayR_const__InputArrayR(instance: *mut c_void, src: *const c_void, dst: *const c_void, times: *const c_void, ocvrs_return: *mut ResultVoid);
pub fn cv_CalibrateCRF_to_CalibrateDebevec(instance: *mut c_void) -> *mut c_void;
pub fn cv_CalibrateCRF_to_CalibrateRobertson(instance: *mut c_void) -> *mut c_void;
pub fn cv_CalibrateCRF_to_Algorithm(instance: *mut c_void) -> *mut c_void;
pub fn cv_CalibrateCRF_delete(instance: *mut c_void);
pub fn cv_CalibrateDebevec_getLambda_const(instance: *const c_void, ocvrs_return: *mut Result<f32>);
pub fn cv_CalibrateDebevec_setLambda_float(instance: *mut c_void, lambda: f32, ocvrs_return: *mut ResultVoid);
pub fn cv_CalibrateDebevec_getSamples_const(instance: *const c_void, ocvrs_return: *mut Result<i32>);
pub fn cv_CalibrateDebevec_setSamples_int(instance: *mut c_void, samples: i32, ocvrs_return: *mut ResultVoid);
pub fn cv_CalibrateDebevec_getRandom_const(instance: *const c_void, ocvrs_return: *mut Result<bool>);
pub fn cv_CalibrateDebevec_setRandom_bool(instance: *mut c_void, random: bool, ocvrs_return: *mut ResultVoid);
pub fn cv_CalibrateDebevec_to_Algorithm(instance: *mut c_void) -> *mut c_void;
pub fn cv_CalibrateDebevec_to_CalibrateCRF(instance: *mut c_void) -> *mut c_void;
pub fn cv_CalibrateDebevec_delete(instance: *mut c_void);
pub fn cv_CalibrateRobertson_getMaxIter_const(instance: *const c_void, ocvrs_return: *mut Result<i32>);
pub fn cv_CalibrateRobertson_setMaxIter_int(instance: *mut c_void, max_iter: i32, ocvrs_return: *mut ResultVoid);
pub fn cv_CalibrateRobertson_getThreshold_const(instance: *const c_void, ocvrs_return: *mut Result<f32>);
pub fn cv_CalibrateRobertson_setThreshold_float(instance: *mut c_void, threshold: f32, ocvrs_return: *mut ResultVoid);
pub fn cv_CalibrateRobertson_getRadiance_const(instance: *const c_void, ocvrs_return: *mut Result<*mut c_void>);
pub fn cv_CalibrateRobertson_to_Algorithm(instance: *mut c_void) -> *mut c_void;
pub fn cv_CalibrateRobertson_to_CalibrateCRF(instance: *mut c_void) -> *mut c_void;
pub fn cv_CalibrateRobertson_delete(instance: *mut c_void);
pub fn cv_MergeDebevec_process_const__InputArrayR_const__OutputArrayR_const__InputArrayR_const__InputArrayR(instance: *mut c_void, src: *const c_void, dst: *const c_void, times: *const c_void, response: *const c_void, ocvrs_return: *mut ResultVoid);
pub fn cv_MergeDebevec_process_const__InputArrayR_const__OutputArrayR_const__InputArrayR(instance: *mut c_void, src: *const c_void, dst: *const c_void, times: *const c_void, ocvrs_return: *mut ResultVoid);
pub fn cv_MergeDebevec_to_Algorithm(instance: *mut c_void) -> *mut c_void;
pub fn cv_MergeDebevec_to_MergeExposures(instance: *mut c_void) -> *mut c_void;
pub fn cv_MergeDebevec_delete(instance: *mut c_void);
pub fn cv_MergeExposures_process_const__InputArrayR_const__OutputArrayR_const__InputArrayR_const__InputArrayR(instance: *mut c_void, src: *const c_void, dst: *const c_void, times: *const c_void, response: *const c_void, ocvrs_return: *mut ResultVoid);
pub fn cv_MergeExposures_to_MergeDebevec(instance: *mut c_void) -> *mut c_void;
pub fn cv_MergeExposures_to_MergeMertens(instance: *mut c_void) -> *mut c_void;
pub fn cv_MergeExposures_to_MergeRobertson(instance: *mut c_void) -> *mut c_void;
pub fn cv_MergeExposures_to_Algorithm(instance: *mut c_void) -> *mut c_void;
pub fn cv_MergeExposures_delete(instance: *mut c_void);
pub fn cv_MergeMertens_process_const__InputArrayR_const__OutputArrayR_const__InputArrayR_const__InputArrayR(instance: *mut c_void, src: *const c_void, dst: *const c_void, times: *const c_void, response: *const c_void, ocvrs_return: *mut ResultVoid);
pub fn cv_MergeMertens_process_const__InputArrayR_const__OutputArrayR(instance: *mut c_void, src: *const c_void, dst: *const c_void, ocvrs_return: *mut ResultVoid);
pub fn cv_MergeMertens_getContrastWeight_const(instance: *const c_void, ocvrs_return: *mut Result<f32>);
pub fn cv_MergeMertens_setContrastWeight_float(instance: *mut c_void, contrast_weiht: f32, ocvrs_return: *mut ResultVoid);
pub fn cv_MergeMertens_getSaturationWeight_const(instance: *const c_void, ocvrs_return: *mut Result<f32>);
pub fn cv_MergeMertens_setSaturationWeight_float(instance: *mut c_void, saturation_weight: f32, ocvrs_return: *mut ResultVoid);
pub fn cv_MergeMertens_getExposureWeight_const(instance: *const c_void, ocvrs_return: *mut Result<f32>);
pub fn cv_MergeMertens_setExposureWeight_float(instance: *mut c_void, exposure_weight: f32, ocvrs_return: *mut ResultVoid);
pub fn cv_MergeMertens_to_Algorithm(instance: *mut c_void) -> *mut c_void;
pub fn cv_MergeMertens_to_MergeExposures(instance: *mut c_void) -> *mut c_void;
pub fn cv_MergeMertens_delete(instance: *mut c_void);
pub fn cv_MergeRobertson_process_const__InputArrayR_const__OutputArrayR_const__InputArrayR_const__InputArrayR(instance: *mut c_void, src: *const c_void, dst: *const c_void, times: *const c_void, response: *const c_void, ocvrs_return: *mut ResultVoid);
pub fn cv_MergeRobertson_process_const__InputArrayR_const__OutputArrayR_const__InputArrayR(instance: *mut c_void, src: *const c_void, dst: *const c_void, times: *const c_void, ocvrs_return: *mut ResultVoid);
pub fn cv_MergeRobertson_to_Algorithm(instance: *mut c_void) -> *mut c_void;
pub fn cv_MergeRobertson_to_MergeExposures(instance: *mut c_void) -> *mut c_void;
pub fn cv_MergeRobertson_delete(instance: *mut c_void);
pub fn cv_Tonemap_process_const__InputArrayR_const__OutputArrayR(instance: *mut c_void, src: *const c_void, dst: *const c_void, ocvrs_return: *mut ResultVoid);
pub fn cv_Tonemap_getGamma_const(instance: *const c_void, ocvrs_return: *mut Result<f32>);
pub fn cv_Tonemap_setGamma_float(instance: *mut c_void, gamma: f32, ocvrs_return: *mut ResultVoid);
pub fn cv_Tonemap_to_TonemapDrago(instance: *mut c_void) -> *mut c_void;
pub fn cv_Tonemap_to_TonemapMantiuk(instance: *mut c_void) -> *mut c_void;
pub fn cv_Tonemap_to_TonemapReinhard(instance: *mut c_void) -> *mut c_void;
pub fn cv_Tonemap_to_Algorithm(instance: *mut c_void) -> *mut c_void;
pub fn cv_Tonemap_delete(instance: *mut c_void);
pub fn cv_TonemapDrago_getSaturation_const(instance: *const c_void, ocvrs_return: *mut Result<f32>);
pub fn cv_TonemapDrago_setSaturation_float(instance: *mut c_void, saturation: f32, ocvrs_return: *mut ResultVoid);
pub fn cv_TonemapDrago_getBias_const(instance: *const c_void, ocvrs_return: *mut Result<f32>);
pub fn cv_TonemapDrago_setBias_float(instance: *mut c_void, bias: f32, ocvrs_return: *mut ResultVoid);
pub fn cv_TonemapDrago_to_Algorithm(instance: *mut c_void) -> *mut c_void;
pub fn cv_TonemapDrago_to_Tonemap(instance: *mut c_void) -> *mut c_void;
pub fn cv_TonemapDrago_delete(instance: *mut c_void);
pub fn cv_TonemapMantiuk_getScale_const(instance: *const c_void, ocvrs_return: *mut Result<f32>);
pub fn cv_TonemapMantiuk_setScale_float(instance: *mut c_void, scale: f32, ocvrs_return: *mut ResultVoid);
pub fn cv_TonemapMantiuk_getSaturation_const(instance: *const c_void, ocvrs_return: *mut Result<f32>);
pub fn cv_TonemapMantiuk_setSaturation_float(instance: *mut c_void, saturation: f32, ocvrs_return: *mut ResultVoid);
pub fn cv_TonemapMantiuk_to_Algorithm(instance: *mut c_void) -> *mut c_void;
pub fn cv_TonemapMantiuk_to_Tonemap(instance: *mut c_void) -> *mut c_void;
pub fn cv_TonemapMantiuk_delete(instance: *mut c_void);
pub fn cv_TonemapReinhard_getIntensity_const(instance: *const c_void, ocvrs_return: *mut Result<f32>);
pub fn cv_TonemapReinhard_setIntensity_float(instance: *mut c_void, intensity: f32, ocvrs_return: *mut ResultVoid);
pub fn cv_TonemapReinhard_getLightAdaptation_const(instance: *const c_void, ocvrs_return: *mut Result<f32>);
pub fn cv_TonemapReinhard_setLightAdaptation_float(instance: *mut c_void, light_adapt: f32, ocvrs_return: *mut ResultVoid);
pub fn cv_TonemapReinhard_getColorAdaptation_const(instance: *const c_void, ocvrs_return: *mut Result<f32>);
pub fn cv_TonemapReinhard_setColorAdaptation_float(instance: *mut c_void, color_adapt: f32, ocvrs_return: *mut ResultVoid);
pub fn cv_TonemapReinhard_to_Algorithm(instance: *mut c_void) -> *mut c_void;
pub fn cv_TonemapReinhard_to_Tonemap(instance: *mut c_void) -> *mut c_void;
pub fn cv_TonemapReinhard_delete(instance: *mut c_void);
