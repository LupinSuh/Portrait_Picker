pub fn std_vectorLcv_GShapeG_new_const() -> *mut c_void;
pub fn std_vectorLcv_GShapeG_delete(instance: *mut c_void);
pub fn std_vectorLcv_GShapeG_len_const(instance: *const c_void) -> size_t;
pub fn std_vectorLcv_GShapeG_isEmpty_const(instance: *const c_void) -> bool;
pub fn std_vectorLcv_GShapeG_capacity_const(instance: *const c_void) -> size_t;
pub fn std_vectorLcv_GShapeG_shrinkToFit(instance: *mut c_void);
pub fn std_vectorLcv_GShapeG_reserve_size_t(instance: *mut c_void, additional: size_t);
pub fn std_vectorLcv_GShapeG_remove_size_t(instance: *mut c_void, index: size_t);
pub fn std_vectorLcv_GShapeG_swap_size_t_size_t(instance: *mut c_void, index1: size_t, index2: size_t);
pub fn std_vectorLcv_GShapeG_clear(instance: *mut c_void);
pub fn std_vectorLcv_GShapeG_push_const_GShape(instance: *mut c_void, val: crate::gapi::GShape);
pub fn std_vectorLcv_GShapeG_insert_size_t_const_GShape(instance: *mut c_void, index: size_t, val: crate::gapi::GShape);
pub fn std_vectorLcv_GShapeG_get_const_size_t(instance: *const c_void, index: size_t, ocvrs_return: *mut crate::gapi::GShape);
pub fn std_vectorLcv_GShapeG_set_size_t_const_GShape(instance: *mut c_void, index: size_t, val: crate::gapi::GShape);
pub fn std_vectorLcv_GShapeG_clone_const(instance: *const c_void) -> *mut c_void;
pub fn std_vectorLcv_GShapeG_data_const(instance: *const c_void) -> *const crate::gapi::GShape;
pub fn std_vectorLcv_GShapeG_dataMut(instance: *mut c_void) -> *mut crate::gapi::GShape;
pub fn cv_fromSlice_const_const_GShapeX_size_t(data: *const crate::gapi::GShape, len: size_t) -> *mut c_void;
