pub type VectorOfFacemarkAAM_Model_Texture = core::Vector<crate::face::FacemarkAAM_Model_Texture>;

impl core::Vector<crate::face::FacemarkAAM_Model_Texture> {
	pub fn as_raw_VectorOfFacemarkAAM_Model_Texture(&self) -> extern_send!(Self) { self.as_raw() }
	pub fn as_raw_mut_VectorOfFacemarkAAM_Model_Texture(&mut self) -> extern_send!(mut Self) { self.as_raw_mut() }
}

vector_extern! { crate::face::FacemarkAAM_Model_Texture,
	std_vectorLcv_face_FacemarkAAM_Model_TextureG_new_const, std_vectorLcv_face_FacemarkAAM_Model_TextureG_delete,
	std_vectorLcv_face_FacemarkAAM_Model_TextureG_len_const, std_vectorLcv_face_FacemarkAAM_Model_TextureG_isEmpty_const,
	std_vectorLcv_face_FacemarkAAM_Model_TextureG_capacity_const, std_vectorLcv_face_FacemarkAAM_Model_TextureG_shrinkToFit,
	std_vectorLcv_face_FacemarkAAM_Model_TextureG_reserve_size_t, std_vectorLcv_face_FacemarkAAM_Model_TextureG_remove_size_t,
	std_vectorLcv_face_FacemarkAAM_Model_TextureG_swap_size_t_size_t, std_vectorLcv_face_FacemarkAAM_Model_TextureG_clear,
	std_vectorLcv_face_FacemarkAAM_Model_TextureG_get_const_size_t, std_vectorLcv_face_FacemarkAAM_Model_TextureG_set_size_t_const_Texture,
	std_vectorLcv_face_FacemarkAAM_Model_TextureG_push_const_Texture, std_vectorLcv_face_FacemarkAAM_Model_TextureG_insert_size_t_const_Texture,
}
vector_non_copy_or_bool! { crate::face::FacemarkAAM_Model_Texture }

